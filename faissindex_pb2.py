# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faissindex.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='faissindex.proto',
  package='faiss_index',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x66\x61issindex.proto\x12\x0b\x66\x61iss_index\"+\n\nAddRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tembedding\x18\x02 \x03(\x02\"\x17\n\tIdRequest\x12\n\n\x02id\x18\x01 \x01(\x03\"*\n\rSearchRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\r\n\x05\x63ount\x18\x02 \x01(\x05\"#\n\x0eRestoreRequest\x12\x11\n\tsave_path\x18\x01 \x01(\t\"4\n\rImportRequest\x12\x11\n\tembs_path\x18\x01 \x01(\t\x12\x10\n\x08ids_path\x18\x02 \x01(\t\"\x0e\n\x0c\x45mptyRequest\"!\n\x0eSimpleResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"-\n\x0eSearchResponse\x12\x0b\n\x03ids\x18\x01 \x03(\x03\x12\x0e\n\x06scores\x18\x02 \x03(\x02\"\x1e\n\rTotalResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x03\x32\x9b\x03\n\x06Server\x12=\n\x03\x41\x64\x64\x12\x17.faiss_index.AddRequest\x1a\x1b.faiss_index.SimpleResponse\"\x00\x12?\n\x06Remove\x12\x16.faiss_index.IdRequest\x1a\x1b.faiss_index.SimpleResponse\"\x00\x12\x43\n\x06Search\x12\x1a.faiss_index.SearchRequest\x1a\x1b.faiss_index.SearchResponse\"\x00\x12\x45\n\x07Restore\x12\x1b.faiss_index.RestoreRequest\x1a\x1b.faiss_index.SimpleResponse\"\x00\x12\x43\n\x06Import\x12\x1a.faiss_index.ImportRequest\x1a\x1b.faiss_index.SimpleResponse\"\x00\x12@\n\x05Total\x12\x19.faiss_index.EmptyRequest\x1a\x1a.faiss_index.TotalResponse\"\x00\x62\x06proto3')
)




_ADDREQUEST = _descriptor.Descriptor(
  name='AddRequest',
  full_name='faiss_index.AddRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss_index.AddRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='embedding', full_name='faiss_index.AddRequest.embedding', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=76,
)


_IDREQUEST = _descriptor.Descriptor(
  name='IdRequest',
  full_name='faiss_index.IdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss_index.IdRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=101,
)


_SEARCHREQUEST = _descriptor.Descriptor(
  name='SearchRequest',
  full_name='faiss_index.SearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss_index.SearchRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='faiss_index.SearchRequest.count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=145,
)


_RESTOREREQUEST = _descriptor.Descriptor(
  name='RestoreRequest',
  full_name='faiss_index.RestoreRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='save_path', full_name='faiss_index.RestoreRequest.save_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=182,
)


_IMPORTREQUEST = _descriptor.Descriptor(
  name='ImportRequest',
  full_name='faiss_index.ImportRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='embs_path', full_name='faiss_index.ImportRequest.embs_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ids_path', full_name='faiss_index.ImportRequest.ids_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=236,
)


_EMPTYREQUEST = _descriptor.Descriptor(
  name='EmptyRequest',
  full_name='faiss_index.EmptyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=238,
  serialized_end=252,
)


_SIMPLERESPONSE = _descriptor.Descriptor(
  name='SimpleResponse',
  full_name='faiss_index.SimpleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='faiss_index.SimpleResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=254,
  serialized_end=287,
)


_SEARCHRESPONSE = _descriptor.Descriptor(
  name='SearchResponse',
  full_name='faiss_index.SearchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='faiss_index.SearchResponse.ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scores', full_name='faiss_index.SearchResponse.scores', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=289,
  serialized_end=334,
)


_TOTALRESPONSE = _descriptor.Descriptor(
  name='TotalResponse',
  full_name='faiss_index.TotalResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='faiss_index.TotalResponse.count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=336,
  serialized_end=366,
)

DESCRIPTOR.message_types_by_name['AddRequest'] = _ADDREQUEST
DESCRIPTOR.message_types_by_name['IdRequest'] = _IDREQUEST
DESCRIPTOR.message_types_by_name['SearchRequest'] = _SEARCHREQUEST
DESCRIPTOR.message_types_by_name['RestoreRequest'] = _RESTOREREQUEST
DESCRIPTOR.message_types_by_name['ImportRequest'] = _IMPORTREQUEST
DESCRIPTOR.message_types_by_name['EmptyRequest'] = _EMPTYREQUEST
DESCRIPTOR.message_types_by_name['SimpleResponse'] = _SIMPLERESPONSE
DESCRIPTOR.message_types_by_name['SearchResponse'] = _SEARCHRESPONSE
DESCRIPTOR.message_types_by_name['TotalResponse'] = _TOTALRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AddRequest = _reflection.GeneratedProtocolMessageType('AddRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.AddRequest)
  ))
_sym_db.RegisterMessage(AddRequest)

IdRequest = _reflection.GeneratedProtocolMessageType('IdRequest', (_message.Message,), dict(
  DESCRIPTOR = _IDREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.IdRequest)
  ))
_sym_db.RegisterMessage(IdRequest)

SearchRequest = _reflection.GeneratedProtocolMessageType('SearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.SearchRequest)
  ))
_sym_db.RegisterMessage(SearchRequest)

RestoreRequest = _reflection.GeneratedProtocolMessageType('RestoreRequest', (_message.Message,), dict(
  DESCRIPTOR = _RESTOREREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.RestoreRequest)
  ))
_sym_db.RegisterMessage(RestoreRequest)

ImportRequest = _reflection.GeneratedProtocolMessageType('ImportRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMPORTREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.ImportRequest)
  ))
_sym_db.RegisterMessage(ImportRequest)

EmptyRequest = _reflection.GeneratedProtocolMessageType('EmptyRequest', (_message.Message,), dict(
  DESCRIPTOR = _EMPTYREQUEST,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.EmptyRequest)
  ))
_sym_db.RegisterMessage(EmptyRequest)

SimpleResponse = _reflection.GeneratedProtocolMessageType('SimpleResponse', (_message.Message,), dict(
  DESCRIPTOR = _SIMPLERESPONSE,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.SimpleResponse)
  ))
_sym_db.RegisterMessage(SimpleResponse)

SearchResponse = _reflection.GeneratedProtocolMessageType('SearchResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHRESPONSE,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.SearchResponse)
  ))
_sym_db.RegisterMessage(SearchResponse)

TotalResponse = _reflection.GeneratedProtocolMessageType('TotalResponse', (_message.Message,), dict(
  DESCRIPTOR = _TOTALRESPONSE,
  __module__ = 'faissindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss_index.TotalResponse)
  ))
_sym_db.RegisterMessage(TotalResponse)



_SERVER = _descriptor.ServiceDescriptor(
  name='Server',
  full_name='faiss_index.Server',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=369,
  serialized_end=780,
  methods=[
  _descriptor.MethodDescriptor(
    name='Add',
    full_name='faiss_index.Server.Add',
    index=0,
    containing_service=None,
    input_type=_ADDREQUEST,
    output_type=_SIMPLERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Remove',
    full_name='faiss_index.Server.Remove',
    index=1,
    containing_service=None,
    input_type=_IDREQUEST,
    output_type=_SIMPLERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Search',
    full_name='faiss_index.Server.Search',
    index=2,
    containing_service=None,
    input_type=_SEARCHREQUEST,
    output_type=_SEARCHRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Restore',
    full_name='faiss_index.Server.Restore',
    index=3,
    containing_service=None,
    input_type=_RESTOREREQUEST,
    output_type=_SIMPLERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Import',
    full_name='faiss_index.Server.Import',
    index=4,
    containing_service=None,
    input_type=_IMPORTREQUEST,
    output_type=_SIMPLERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Total',
    full_name='faiss_index.Server.Total',
    index=5,
    containing_service=None,
    input_type=_EMPTYREQUEST,
    output_type=_TOTALRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SERVER)

DESCRIPTOR.services_by_name['Server'] = _SERVER

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ServerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Add = channel.unary_unary(
          '/faiss_index.Server/Add',
          request_serializer=AddRequest.SerializeToString,
          response_deserializer=SimpleResponse.FromString,
          )
      self.Remove = channel.unary_unary(
          '/faiss_index.Server/Remove',
          request_serializer=IdRequest.SerializeToString,
          response_deserializer=SimpleResponse.FromString,
          )
      self.Search = channel.unary_unary(
          '/faiss_index.Server/Search',
          request_serializer=SearchRequest.SerializeToString,
          response_deserializer=SearchResponse.FromString,
          )
      self.Restore = channel.unary_unary(
          '/faiss_index.Server/Restore',
          request_serializer=RestoreRequest.SerializeToString,
          response_deserializer=SimpleResponse.FromString,
          )
      self.Import = channel.unary_unary(
          '/faiss_index.Server/Import',
          request_serializer=ImportRequest.SerializeToString,
          response_deserializer=SimpleResponse.FromString,
          )
      self.Total = channel.unary_unary(
          '/faiss_index.Server/Total',
          request_serializer=EmptyRequest.SerializeToString,
          response_deserializer=TotalResponse.FromString,
          )


  class ServerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Restore(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Total(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Add': grpc.unary_unary_rpc_method_handler(
            servicer.Add,
            request_deserializer=AddRequest.FromString,
            response_serializer=SimpleResponse.SerializeToString,
        ),
        'Remove': grpc.unary_unary_rpc_method_handler(
            servicer.Remove,
            request_deserializer=IdRequest.FromString,
            response_serializer=SimpleResponse.SerializeToString,
        ),
        'Search': grpc.unary_unary_rpc_method_handler(
            servicer.Search,
            request_deserializer=SearchRequest.FromString,
            response_serializer=SearchResponse.SerializeToString,
        ),
        'Restore': grpc.unary_unary_rpc_method_handler(
            servicer.Restore,
            request_deserializer=RestoreRequest.FromString,
            response_serializer=SimpleResponse.SerializeToString,
        ),
        'Import': grpc.unary_unary_rpc_method_handler(
            servicer.Import,
            request_deserializer=ImportRequest.FromString,
            response_serializer=SimpleResponse.SerializeToString,
        ),
        'Total': grpc.unary_unary_rpc_method_handler(
            servicer.Total,
            request_deserializer=EmptyRequest.FromString,
            response_serializer=TotalResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'faiss_index.Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaServerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Remove(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Search(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Restore(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Import(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Total(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaServerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Add.future = None
    def Remove(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Remove.future = None
    def Search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Search.future = None
    def Restore(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Restore.future = None
    def Import(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Import.future = None
    def Total(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Total.future = None


  def beta_create_Server_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('faiss_index.Server', 'Add'): AddRequest.FromString,
      ('faiss_index.Server', 'Import'): ImportRequest.FromString,
      ('faiss_index.Server', 'Remove'): IdRequest.FromString,
      ('faiss_index.Server', 'Restore'): RestoreRequest.FromString,
      ('faiss_index.Server', 'Search'): SearchRequest.FromString,
      ('faiss_index.Server', 'Total'): EmptyRequest.FromString,
    }
    response_serializers = {
      ('faiss_index.Server', 'Add'): SimpleResponse.SerializeToString,
      ('faiss_index.Server', 'Import'): SimpleResponse.SerializeToString,
      ('faiss_index.Server', 'Remove'): SimpleResponse.SerializeToString,
      ('faiss_index.Server', 'Restore'): SimpleResponse.SerializeToString,
      ('faiss_index.Server', 'Search'): SearchResponse.SerializeToString,
      ('faiss_index.Server', 'Total'): TotalResponse.SerializeToString,
    }
    method_implementations = {
      ('faiss_index.Server', 'Add'): face_utilities.unary_unary_inline(servicer.Add),
      ('faiss_index.Server', 'Import'): face_utilities.unary_unary_inline(servicer.Import),
      ('faiss_index.Server', 'Remove'): face_utilities.unary_unary_inline(servicer.Remove),
      ('faiss_index.Server', 'Restore'): face_utilities.unary_unary_inline(servicer.Restore),
      ('faiss_index.Server', 'Search'): face_utilities.unary_unary_inline(servicer.Search),
      ('faiss_index.Server', 'Total'): face_utilities.unary_unary_inline(servicer.Total),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Server_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('faiss_index.Server', 'Add'): AddRequest.SerializeToString,
      ('faiss_index.Server', 'Import'): ImportRequest.SerializeToString,
      ('faiss_index.Server', 'Remove'): IdRequest.SerializeToString,
      ('faiss_index.Server', 'Restore'): RestoreRequest.SerializeToString,
      ('faiss_index.Server', 'Search'): SearchRequest.SerializeToString,
      ('faiss_index.Server', 'Total'): EmptyRequest.SerializeToString,
    }
    response_deserializers = {
      ('faiss_index.Server', 'Add'): SimpleResponse.FromString,
      ('faiss_index.Server', 'Import'): SimpleResponse.FromString,
      ('faiss_index.Server', 'Remove'): SimpleResponse.FromString,
      ('faiss_index.Server', 'Restore'): SimpleResponse.FromString,
      ('faiss_index.Server', 'Search'): SearchResponse.FromString,
      ('faiss_index.Server', 'Total'): TotalResponse.FromString,
    }
    cardinalities = {
      'Add': cardinality.Cardinality.UNARY_UNARY,
      'Import': cardinality.Cardinality.UNARY_UNARY,
      'Remove': cardinality.Cardinality.UNARY_UNARY,
      'Restore': cardinality.Cardinality.UNARY_UNARY,
      'Search': cardinality.Cardinality.UNARY_UNARY,
      'Total': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'faiss_index.Server', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
